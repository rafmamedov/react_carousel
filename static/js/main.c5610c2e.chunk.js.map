{"version":3,"sources":["components/Carousel/Carousel.tsx","components/Input/Input.tsx","components/Form/Form.tsx","App.tsx","index.tsx"],"names":["Carousel","state","transform","slideRight","props","step","itemWidth","frameSize","images","infinite","maxPossibleMove","length","setState","prevState","slideLeft","this","animationDuration","widthOfVisible","sizeOfHidden","className","style","width","transition","map","image","index","src","alt","height","type","onClick","disabled","Component","Input","labelText","id","name","value","min","max","onChange","htmlFor","Form","handleChange","handleInfinite","checked","App","event","target","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c5610c2e.chunk.js","sourcesContent":["import { Component } from 'react';\nimport './Carousel.scss';\n\ntype Props = {\n  images: string[];\n  step: number;\n  frameSize: number;\n  itemWidth: number;\n  animationDuration: number;\n  infinite: boolean;\n};\n\ntype State = {\n  transform: number;\n};\n\nexport class Carousel extends Component <Props, State> {\n  state: Readonly<State> = {\n    transform: 0,\n  };\n\n  slideRight = () => {\n    const {\n      step,\n      itemWidth,\n      frameSize,\n      images,\n      infinite,\n    } = this.props;\n\n    const maxPossibleMove = (images.length - frameSize) * itemWidth;\n\n    if (infinite && this.state.transform === -maxPossibleMove) {\n      this.setState({\n        transform: (frameSize * itemWidth),\n      });\n    }\n\n    this.setState(prevState => ({\n      transform: (prevState.transform - (step * itemWidth)) <= -maxPossibleMove\n        ? -maxPossibleMove\n        : (prevState.transform - (step * itemWidth)),\n    }));\n  };\n\n  slideLeft = () => {\n    const {\n      step,\n      itemWidth,\n      images,\n      infinite,\n    } = this.props;\n\n    if (infinite && this.state.transform >= 0) {\n      this.setState({\n        transform: -(images.length * itemWidth),\n      });\n    }\n\n    this.setState(prevState => ({\n      transform: (prevState.transform + (step * itemWidth)) > 0\n        ? 0\n        : (prevState.transform + (step * itemWidth)),\n    }));\n  };\n\n  render() {\n    const {\n      images,\n      frameSize,\n      itemWidth,\n      animationDuration,\n      infinite,\n    } = this.props;\n\n    const { transform } = this.state;\n    const widthOfVisible = itemWidth * frameSize;\n    const sizeOfHidden = (images.length - frameSize) * itemWidth;\n\n    return (\n      <div className=\"Carousel\">\n        <ul\n          className=\"Carousel__list\"\n          style={{\n            width: `${widthOfVisible}px`,\n            transform: `translateX(${transform}px)`,\n            transition: `${animationDuration}ms`,\n          }}\n        >\n          {images.map((image, index) => (\n            <li\n              key={image}\n            >\n              <img\n                src={image}\n                alt={`emoji ${index + 1}`}\n                width={itemWidth}\n                height={itemWidth}\n              />\n            </li>\n          ))}\n        </ul>\n\n        <div className=\"Carousel__buttons\">\n          <button\n            type=\"button\"\n            className=\"Carousel__button\"\n            onClick={this.slideLeft}\n            disabled={transform === 0 && !infinite}\n          >\n            {'<'}\n          </button>\n\n          <button\n            data-cy=\"next\"\n            type=\"button\"\n            className=\"Carousel__button\"\n            onClick={this.slideRight}\n            disabled={transform === -sizeOfHidden\n              && !infinite}\n          >\n            {'>'}\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport './Input.scss';\n\ntype Props = {\n  labelText: string;\n  id: string;\n  name: string;\n  value: string | number;\n  min: string;\n  max: string;\n  step: string\n  onChange: (event: React.ChangeEvent<HTMLInputElement>) => void;\n};\n\nexport const Input: React.FC<Props> = ({\n  labelText,\n  id,\n  name,\n  value,\n  min,\n  max,\n  step,\n  onChange,\n}) => (\n  <label htmlFor={id}>\n    {labelText}\n    <input\n      className=\"Input\"\n      id={id}\n      type=\"number\"\n      name={name}\n      value={value}\n      min={min}\n      max={max}\n      step={step}\n      onChange={onChange}\n    />\n  </label>\n);\n","import React from 'react';\nimport { Input } from '../Input';\nimport './Form.scss';\n\ntype Props = {\n  itemWidth: number;\n  handleChange: (event: React.ChangeEvent<HTMLInputElement>) => void;\n  frameSize: number;\n  step: number;\n  animationDuration: number;\n  images: string[];\n  infinite: boolean;\n  handleInfinite: () => void;\n};\n\nexport const Form: React.FC<Props> = ({\n  itemWidth,\n  handleChange,\n  frameSize,\n  step,\n  animationDuration,\n  images,\n  infinite,\n  handleInfinite,\n}) => (\n  <form className=\"Form\">\n    <Input\n      labelText=\"Item width:\"\n      id=\"itemId\"\n      name=\"itemWidth\"\n      value={itemWidth}\n      min=\"100\"\n      max=\"200\"\n      step=\"5\"\n      onChange={handleChange}\n    />\n\n    <Input\n      labelText=\"Frame size:\"\n      id=\"frameId\"\n      name=\"frameSize\"\n      value={frameSize}\n      min=\"1\"\n      max={`${images.length}`}\n      step=\"1\"\n      onChange={handleChange}\n    />\n\n    <Input\n      labelText=\"Step:\"\n      id=\"stepId\"\n      name=\"step\"\n      value={step}\n      min=\"1\"\n      max={`${images.length - frameSize}`}\n      step=\"1\"\n      onChange={handleChange}\n    />\n\n    <Input\n      labelText=\"Animation:\"\n      id=\"animationId\"\n      name=\"animationDuration\"\n      value={animationDuration}\n      min=\"100\"\n      max=\"5000\"\n      step=\"100\"\n      onChange={handleChange}\n    />\n\n    <label>\n      Infinite:\n      <input\n        className=\"Form--checkbox\"\n        type=\"checkbox\"\n        name=\"infinite\"\n        checked={infinite}\n        onChange={handleInfinite}\n      />\n    </label>\n  </form>\n);\n","import { Component } from 'react';\nimport './App.scss';\nimport { Carousel } from './components/Carousel';\nimport { Form } from './components/Form';\n\ninterface State {\n  images: string[];\n  step: number;\n  frameSize: number;\n  itemWidth: number;\n  animationDuration: number;\n  infinite: boolean;\n}\n\nexport class App extends Component<{}, State> {\n  state = {\n    images: [\n      './img/1.png',\n      './img/2.png',\n      './img/3.png',\n      './img/4.png',\n      './img/5.png',\n      './img/6.png',\n      './img/7.png',\n      './img/8.png',\n      './img/9.png',\n      './img/10.png',\n    ],\n    step: 3,\n    frameSize: 3,\n    itemWidth: 130,\n    animationDuration: 1000,\n    infinite: false,\n  };\n\n  handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    this.setState(state => ({\n      ...state,\n      [event.target.name]: +(event.target.value),\n    }));\n  };\n\n  handleInfinite = () => {\n    this.setState(state => ({\n      infinite: !state.infinite,\n    }));\n  };\n\n  render() {\n    const {\n      images,\n      step,\n      frameSize,\n      itemWidth,\n      animationDuration,\n      infinite,\n    } = this.state;\n\n    return (\n      <div className=\"App\">\n        {/* eslint-disable-next-line */}\n        <h1 data-cy=\"title\"> Carousel with {images.length} images </h1>\n\n        <Carousel\n          images={images}\n          step={step}\n          frameSize={frameSize}\n          itemWidth={itemWidth}\n          animationDuration={animationDuration}\n          infinite={infinite}\n        />\n\n        <Form\n          itemWidth={itemWidth}\n          frameSize={frameSize}\n          step={step}\n          animationDuration={animationDuration}\n          images={images}\n          infinite={infinite}\n          handleChange={this.handleChange}\n          handleInfinite={this.handleInfinite}\n        />\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}